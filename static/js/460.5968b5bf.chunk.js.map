{"version":3,"file":"static/js/460.5968b5bf.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/API/api.jsx","components/MovieDetails/Cast/Cast.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const API_KEY = '3ff6f99473ad32775432a3dc640480bc';\nconst SITE_URL = 'https://api.themoviedb.org/3';\n\nexport const trendingDay = async () => {\n  const response = await fetch(\n    `${SITE_URL}/trending/all/day?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n\n  return data;\n};\n\nexport const movieInfo = async (id, options) => {\n  const response = await fetch(\n    `${SITE_URL}/movie/${id}${options}?api_key=${API_KEY}`\n  );\n  const data = await response.json();\n  return data;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieInfo } from '../../API/api';\n\nconst PLACEHOLDER_PHOTO_URL = `https://img.freepik.com/free-vector/illustration-businessman_53876-5856.jpg?w=200&t=st=1687362525~exp=1687363125~hmac=0b38e340921c7c42beb3fc2b7370fa7a73acf9815fd13471f441ff07e6ae0246`;\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    movieInfo(movieId, '/credits').then(data => {\n      setCast(data.cast);\n    });\n  }, [movieId]);\n\n  if (cast.length) {\n    return (\n      <div>\n        <ul>\n          {cast.map(({ cast_id, name, profile_path, character }) => (\n            <li key={cast_id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p//w200/${profile_path}`\n                    : PLACEHOLDER_PHOTO_URL\n                }\n                alt={`${name}`}\n              />\n              <h3>{name}</h3>\n              <p>charakter: {character}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n  return <div>sorry, don't have information about this section</div>;\n};\n\nexport default Cast;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","SITE_URL","trendingDay","_ref","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","concat","sent","json","abrupt","stop","movieInfo","_ref2","_callee2","id","options","_context2","_x","_x2","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","length","_jsx","children","map","cast_id","name","profile_path","character","_jsxs","src","alt"],"sourceRoot":""}